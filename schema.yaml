openapi: 3.0.3
info:
  title: BiblioteKA t15-group
  version: 1.0.0
  description: In this project, it was built a library system where its possible to
    sign up user both as collaborator and student and from that we can post new books,
    make copies, lend copies, follow and unfollow book, mail user concerning new copies
    available for lending and etc...
paths:
  /api/books/:
    get:
      operationId: books_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - books
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookList'
          description: ''
    post:
      operationId: books_create
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
  /api/books/{id}/:
    get:
      operationId: books_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    put:
      operationId: books_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    patch:
      operationId: books_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBook'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    delete:
      operationId: books_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/books/follow/{id}/:
    get:
      operationId: books_follow_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - books
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFollowingList'
          description: ''
    post:
      operationId: books_follow_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Following'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Following'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Following'
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Following'
          description: ''
    delete:
      operationId: books_follow_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/copy/:
    get:
      operationId: copy_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - copy
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCopySerializersList'
          description: ''
    post:
      operationId: copy_create
      tags:
      - copy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopySerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CopySerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CopySerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopySerializers'
          description: ''
  /api/copy/{id}/:
    get:
      operationId: copy_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - copy
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopySerializers'
          description: ''
    put:
      operationId: copy_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - copy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopySerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CopySerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CopySerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopySerializers'
          description: ''
    patch:
      operationId: copy_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - copy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCopySerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCopySerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCopySerializers'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopySerializers'
          description: ''
    delete:
      operationId: copy_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - copy
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/lending/:
    get:
      operationId: lending_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - lending
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLendginCreateList'
          description: ''
    post:
      operationId: lending_create
      tags:
      - lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LendginCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LendginCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LendginCreate'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendginCreate'
          description: ''
  /api/lending/{id}/:
    get:
      operationId: lending_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lending
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leading'
          description: ''
    put:
      operationId: lending_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Leading'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Leading'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Leading'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leading'
          description: ''
    patch:
      operationId: lending_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLeading'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLeading'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLeading'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leading'
          description: ''
    delete:
      operationId: lending_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lending
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/lending/{id}/close/:
    put:
      operationId: lending_close_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Leading'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Leading'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Leading'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leading'
          description: ''
    patch:
      operationId: lending_close_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLeading'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLeading'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLeading'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leading'
          description: ''
  /api/lending/{id}/user/:
    get:
      operationId: lending_user_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - lending
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLeadingList'
          description: ''
  /api/lending/expired/:
    post:
      operationId: lending_expired_create
      tags:
      - lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSerializerLending'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSerializerLending'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSerializerLending'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSerializerLending'
          description: ''
  /api/login/:
    post:
      operationId: login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/users/:
    get:
      operationId: users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    Book:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        author:
          type: string
          maxLength: 50
        sinopse:
          type: string
          nullable: true
        coverImage:
          type: string
          nullable: true
          maxLength: 50
        pageQuantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        followers:
          type: array
          items:
            $ref: '#/components/schemas/UserFollow'
          readOnly: true
      required:
      - author
      - followers
      - id
      - pageQuantity
      - title
    CopySerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_available:
          type: boolean
        library_name:
          type: string
          maxLength: 120
        created_at:
          type: string
          format: date-time
          readOnly: true
        book:
          type: integer
      required:
      - book
      - created_at
      - id
      - library_name
    Following:
      type: object
      properties:
        followers:
          type: array
          items:
            $ref: '#/components/schemas/UserFollow'
          readOnly: true
      required:
      - followers
    Leading:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        lending_date:
          type: string
          format: date
        expire_date:
          type: string
          format: date
        user:
          allOf:
          - $ref: '#/components/schemas/UserSerializerLending'
          readOnly: true
        is_close:
          type: boolean
        copy:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - copy
      - expire_date
      - id
      - user
    LendginCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        lending_date:
          type: string
          format: date
        expire_date:
          type: string
          format: date
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserSerializerLending'
          readOnly: true
        is_close:
          type: boolean
        copy:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - copy
      - expire_date
      - id
      - user
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_available:
          type: boolean
        library_name:
          type: string
          maxLength: 120
        created_at:
          type: string
          format: date-time
          readOnly: true
        book:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - book
      - created_at
      - id
      - library_name
    NullEnum:
      enum:
      - null
    PaginatedBookList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Book'
    PaginatedCopySerializersList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CopySerializers'
    PaginatedFollowingList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Following'
    PaginatedLeadingList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Leading'
    PaginatedLendginCreateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LendginCreate'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedBook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        author:
          type: string
          maxLength: 50
        sinopse:
          type: string
          nullable: true
        coverImage:
          type: string
          nullable: true
          maxLength: 50
        pageQuantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        followers:
          type: array
          items:
            $ref: '#/components/schemas/UserFollow'
          readOnly: true
    PatchedCopySerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_available:
          type: boolean
        library_name:
          type: string
          maxLength: 120
        created_at:
          type: string
          format: date-time
          readOnly: true
        book:
          type: integer
    PatchedLeading:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        lending_date:
          type: string
          format: date
        expire_date:
          type: string
          format: date
        user:
          allOf:
          - $ref: '#/components/schemas/UserSerializerLending'
          readOnly: true
        is_close:
          type: boolean
        copy:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_authorized:
          type: boolean
          readOnly: true
        is_superuser:
          type: boolean
          readOnly: true
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        user_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/UserTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        following:
          type: array
          items:
            $ref: '#/components/schemas/Book'
          readOnly: true
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_authorized:
          type: boolean
          readOnly: true
        is_superuser:
          type: boolean
          readOnly: true
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        user_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/UserTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        following:
          type: array
          items:
            $ref: '#/components/schemas/Book'
          readOnly: true
      required:
      - email
      - following
      - id
      - is_authorized
      - is_superuser
      - password
      - username
    UserFollow:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - email
      - id
      - username
    UserSerializerLending:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        is_authorized:
          type: boolean
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        user_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/UserTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - email
      - id
      - username
    UserTypeEnum:
      enum:
      - Student
      - Library Collaborator
      type: string
      description: |-
        * `Student` - Student
        * `Library Collaborator` - Library Collaborator
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
